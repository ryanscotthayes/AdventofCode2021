WITH PT1 AS (
	SELECT 'PT1: ' AS PART, SUM(INCREASING_IND) AS ANSWER FROM (
		select CASE WHEN RAW_DATA > LAG(RAW_DATA) OVER (PARTITION BY '1' ORDER BY ORDERING) THEN 1 ELSE 0 END AS INCREASING_IND
		FROM AOC2021.D1_INPUT
	) as x
),
PT2_CLEANED AS (
	SELECT RAW_DATA + LEAD(RAW_DATA) OVER (PARTITION BY '1' ORDER BY ORDERING) + LEAD(RAW_DATA,2) OVER (PARTITION BY '1' ORDER BY ORDERING) AS ROLLING_3_PERIOD,
    ORDERING
    FROM AOC2021.D1_INPUT
    
),

PT2 AS (
	SELECT 'PT2: ' AS PART, SUM(ROLLING_3_PERIOD_INC) AS ANSWER FROM (
		SELECT CASE WHEN ROLLING_3_PERIOD > LAG(ROLLING_3_PERIOD) OVER (PARTITION BY '1' ORDER BY ORDERING) THEN 1 ELSE 0 END AS ROLLING_3_PERIOD_INC 
        FROM PT2_CLEANED
	) as x
)
	SELECT PT1.PART,
	PT1.ANSWER
	FROM PT1
UNION 
	SELECT PT2.PART,
	PT2.ANSWER
	FROM PT2
;